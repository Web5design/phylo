<?php
// $Id$

/**
 * @file
 * Main core module file for issuenote
 */

/**
 * Implements hook_menu().
 */
function issuenote_menu() {
  $items = array();
  $items['issuenote/ajax_link'] = array(
    'title' => 'IssueNote Link',
    'page callback' => 'issuenote_render_link',
    'access callback' => TRUE,
    'weight' => 9,
  );

  $items['issuenote/link_callback'] = array(
    'title' => 'IssueNote',
    'description' => 'Test',
    'page callback' => '_issuenote_link_response',
    'page arguments' => array(),
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'weight' => 40,
  );

/*

  $items['issuenote_link_callback'] = array(
    'title' => 'IssueNote Page Example',
    'page callback' => 'issuenote_description',
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
*/

  return $items;
}

/*
 * Callback for link example.
 *
 * Takes different logic paths based on whether Javascript was enabled.
 * If $type == 'ajax', it tells this function that ajax.js has rewritten
 * the URL and thus we are doing an AJAX and can return an array of commands.
 * @param $type
 *   Either 'ajax' or 'nojs. Type is simply the normal URL argument to this
 *   URL.
 * @return
 *   If $type == 'ajax', returns an array of AJAX Commands.
 *   Otherwise, just returns the content, which will end up being a page.
 * @see ajax
 */
function _issuenote_link_response($type = 'ajax') {
echo "issuenote_link_response output";
}

function issuenote_description() {
  return array('#markup' => t( array('hi')));
}

/**
 * Demonstrates a clickable AJAX-enabled link.
 *
 * Because of the 'use-ajax' class applied here, the link submission is done
 * via AJAX.
 *
 * This will not work if ajax.js is not loaded on the page.
 * @return unknown_type
 */
function issuenote_render_link() {
  drupal_add_js('misc/ajax.js');


 // Get a full path from arguments passed to function.
  $path = arg();
  // Remove first element from callback.
  array_shift($path);
  array_shift($path);
  // Build a url path.
/*   $path = implode('/', $path); */


  $explanation = "explanation";





/*
  $output = "<div>" . t($explanation);
  $link = l(t('Click here'), 'issuenote/link_callback/nojs/' . $path, array('attributes' => array('class' => array('use-ajax'))));
  $output .= "<div>$link</div><div id='myDiv'></div>";
  $commands = array();
  $commands[] = ajax_command_append('#myDiv', "o" . $output);
  $page = array('#type' => 'ajax', '#commands' => $commands);
//  ajax_deliver($page);
  echo $output;
*/


  $view_arg = $path[1];
  switch($path[0]) {
    case 'issues':
      $name = 'issue';
      $display_id = 'page_2';
      break;
    case 'notes':
      $name = 'note';
      $display_id = 'page_1';
      break;
  }

  // Load the view.
  if (!empty($name) && !empty($display_id)) {
    $view = null;
    if ( $view = views_get_view($name) ) {
     //$output = $name . " " . $display_id . $view_arg;
     // $output = $view->execute_display($display_id, $view_arg);

      $view->set_display($display_id);
      $view->set_arguments(array($view_arg));
      $output = $view->preview();


    }
  }



 // $output .= "<div id='issuenote-display'></div>";
/*
  $commands = array();
  $commands[] = ajax_command_append('#myDiv', $output);
  $page = array('#type' => 'ajax', '#commands' => $commands);
  ajax_deliver($page);
*/

  echo $output;

}
